{"version":3,"sources":["component/Redux/Redux.js","component/User/AddUser.js","component/User/UpdateUser.js","component/User/LoadUser.js","component/Category/AddCategory.js","component/Category/UpdateCategory.js","component/Category/LoadCategory.js","component/Post/LoadPost.js","component/Post/AddPost.js","component/Comment/AddComment.js","component/Comment/LoadComment.js","admin/Admin.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Redux","React","Component","AddUser","props","upUser","a","token","btoa","fetch","method","headers","body","JSON","stringify","state","response","console","log","ok","json","resp","data","history","replace","name","phone","password","roles","address","action","htmlFor","type","onChange","e","setState","target","value","onClick","this","to","withRouter","UpdateUser","handleChangeName","evt","handleChangePhone","handleChangeAddress","handleChangePassword","loadIdUser","match","id","params","SEARCH_CATEGORY_URL","BASE_URL","localStorage","getItem","user","submit","success","alert","goBack","LoadUser","loadUser","responseDTO","loadMore","searchDTO","start","length","reset","order","column","dir","columns","className","map","LoadItem","deleteUser","DELETE_URL","String","AddCategory","addCategory","Fragment","UpdateCategory","handleChang","getIdCategory","category","sumbit","handleChange","LoadCategory","loadCategory","oldResponseDTO","concat","style","display","width","justifyContent","border","deleteCategory","DELETE_CATEGORY_URL","LoadPost","loadPost","Accept","post","RowItem","deleteData","title","decription","categoryId","height","src","images","AddPost","categories","submitData","FormData","append","selectedFile","reload","handleChangeFile","files","handleChangeTitle","handleChangeDescription","description","handleChangeCategoryId","event","item","key","accept","AddComment","handleChangeContent","content","addComment","postId","LoadComment","loadData2","com","createdDate","AdminMenu","AdminRoute","path","exact","component","Admin","Login","login","username","userDTO","setItem","error","App","Client","MenuClient","ClientRoute","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3d581d8b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Redux extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                Hello Redux!\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\"\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nclass AddUser extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            name: \"\",\r\n            phone: \"\",\r\n            password: \"\",\r\n            roles: ['ROLE_MEMBER',\"ROLE_ADMIN\"],\r\n            address: \"\"\r\n        }\r\n    }\r\n    upUser = async () => {\r\n        let token = btoa(\"0123456789:123456\");\r\n        let ADD_URL = \"http://103.237.144.156:8080/api/admin/user/add\";\r\n     try {\r\n       \r\n        let response = await fetch(ADD_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n                \"Authorization\" : \"Basic \"+ token\r\n            },\r\n            body: JSON.stringify(this.state)\r\n        })\r\n        console.log(response);\r\n        if(response.ok){\r\n            let resp = await response.json();\r\n            console.log(resp.data)\r\n            const {history} = this.props;\r\n            history.replace(\"/admin/user\");\r\n        }\r\n     } catch (error){\r\n         console.log(error)\r\n     }\r\n    }\r\n    render(){\r\n        return(\r\n          <form action=\"\">\r\n             <div>\r\n                 <label htmlFor=\"\">Name</label>\r\n                 <input type=\"text\" name=\"name\" onChange={ e => {\r\n                     this.setState({\r\n                         name: e.target.value\r\n                     })\r\n                 } }/>\r\n             </div>\r\n             <div>\r\n                 <label htmlFor=\"\">Phone</label>\r\n                 <input type=\"text\" name=\"phone\" onChange={ e => {\r\n                     this.setState({\r\n                         phone: e.target.value\r\n                     })\r\n                 } }/>\r\n             </div>\r\n             <div>\r\n                 <label htmlFor=\"\">Password</label>\r\n                 <input type=\"text\" name=\"password\" onChange={ e => {\r\n                     this.setState({\r\n                         password: e.target.value\r\n                     })\r\n                 } }/>\r\n             </div>\r\n             <div>\r\n                 <label htmlFor=\"\">Address</label>\r\n                 <input type=\"text\" name=\"address\" onChange={ e => {\r\n                     this.setState({\r\n                         address: e.target.value\r\n                     })\r\n                 } }/>\r\n             </div>\r\n             <div>\r\n                 <input type=\"button\" value=\"Sumbit\" onClick={this.upUser}/>\r\n                 <Link to=\"/admin/user\">Quay lai</Link>\r\n             </div>\r\n          </form>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(AddUser);\r\n\r\n","// import React from 'react'\r\n// import { withRouter } from 'react-router-dom';\r\n\r\n// class UpdateUser extends React.Component{\r\n//     state={\r\n//         name: \"\",\r\n//         phone: \"\",\r\n//         password: '',\r\n//         roles: ['ROLE_MEMBER',\"ROLE_ADMIN\"],\r\n//         address: \"\"\r\n//     }\r\n//     getIdUser = async () => {\r\n//         const {match} = this.props;\r\n//         const id = match.params.id;\r\n\r\n//         const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n//         const getId_URL = BASE_URL + \"/admin/user\" + id;\r\n\r\n//         try {\r\n//             let response = await fetch(getId_URL, {\r\n//                 method: \"GET\",\r\n//                 headers: {\r\n//                     \"Content-Type\" : \"application/json\"\r\n//                 }\r\n//             })\r\n//             if(response.ok){\r\n//                 let resp = await response.json();\r\n//                 this.setState(resp)\r\n//             }\r\n//         } catch (error) {\r\n//             console.log(error)\r\n//         }\r\n\r\n//     }\r\n//     sumbitUpdate = async () => {\r\n//         const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n//         const getId_URL = BASE_URL + \"/admin/user/update\";\r\n//         try {\r\n//             let token = localStorage.getItem(\"token\");\r\n//             let response = await fetch(getId_URL, {\r\n//                 method: \"PUT\",\r\n//                 headers: {\r\n//                     \"Authorization\" : \"Basic \" + token,\r\n//                     \"Content-Type\" : \"application/json\"\r\n//                 },\r\n//                 body: JSON.stringify(this.state)\r\n//             })\r\n//             if(response.ok){\r\n               \r\n//                 alert(\"Update Success\")\r\n//                 const {history} = this.props;\r\n//                 history.goBack();\r\n//             }\r\n//         } catch (error) {\r\n//             console.log(error)\r\n//         } \r\n//     }\r\n//     render(){\r\n//         return(\r\n//             <React.Fragment>\r\n//                 <div>\r\n//                     <label htmlFor=\"\">Name</label>\r\n//                     <input type=\"text\" name=\"name\" onChange={ e => {\r\n//                         this.setState({\r\n//                             name: e.target.value\r\n//                         })\r\n//                     } }/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <label htmlFor=\"\">Phone</label>\r\n//                     <input type=\"text\" name=\"phone\" onChange={ e => {\r\n//                         this.setState({\r\n//                             phone: e.target.value\r\n//                         })\r\n//                     } }/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <label htmlFor=\"\">Password</label>\r\n//                     <input type=\"text\" name=\"password\" onChange={ e => {\r\n//                         this.setState({\r\n//                             password: e.target.value\r\n//                         })\r\n//                     } }/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <label htmlFor=\"\">Adress</label>\r\n//                     <input type=\"text\" name=\"adress\" onChange={ e => {\r\n//                         this.setState({\r\n//                             address: e.target.value\r\n//                         })\r\n//                     } }/>\r\n//                 </div>\r\n//                 <input type=\"button\" onClick={this.sumbitUpdate} value=\"Sumbit\"/>\r\n//             </React.Fragment>\r\n//         )\r\n//     }\r\n// }\r\n// export default withRouter(UpdateUser)\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UpdateUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"\",\r\n            phone: \"\",\r\n            password: '',\r\n            address: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadIdUser()\r\n    }\r\n    //can bind this o trong ham\r\n    handleChangeName = (evt) => {\r\n        this.setState({\r\n            name: evt.target.value\r\n        })\r\n    }\r\n    handleChangePhone = (evt) => {\r\n        this.setState({\r\n            phone: evt.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeAddress = (evt) => {\r\n        this.setState({\r\n            address: evt.target.value\r\n        })\r\n    }\r\n    handleChangePassword = (evt) => {\r\n        this.setState({\r\n            password: evt.target.value\r\n        })\r\n    }\r\n\r\n    loadIdUser = async () => {\r\n        ///doc id\r\n        const { match } = this.props;\r\n        const id = match.params.id\r\n\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const SEARCH_CATEGORY_URL = BASE_URL + \"/admin/user/\" + id\r\n\r\n        try {\r\n            let token = localStorage.getItem(\"token\")\r\n            let resp = await fetch(SEARCH_CATEGORY_URL,\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Authorization\" : \"Basic \" + token,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                }\r\n            )\r\n\r\n            if (resp.ok) {\r\n                let user = await resp.json()\r\n                this.setState(user)\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    submit = async () => {\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const UPDATE_CATEGORY_URL = BASE_URL + \"/admin/user/update\"\r\n\r\n        try {\r\n            let token = localStorage.getItem(\"token\")\r\n            let resp = await fetch(UPDATE_CATEGORY_URL,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Authorization\": \"Basic \" + token,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(this.state)\r\n                }\r\n            )\r\n\r\n            if (resp.ok) {\r\n                this.setState({ success: \"SUCCESS\" })\r\n                alert('thanhcong')\r\n                const { history } = this.props\r\n                history.goBack()\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //trong onclick phai truyen vao 1 ham\r\n        return <div>\r\n            <p>{this.state.success}</p>\r\n            <div>\r\n                <label>Name:</label>\r\n                <input type=\"text\" value={this.state.name} onChange={this.handleChangeName} />\r\n            </div>\r\n            <div>\r\n                <label>phone:</label>\r\n                <input type=\"text\" value={this.state.phone} onChange={this.handleChangePhone} />\r\n            </div>\r\n            <div>\r\n                <label>password:</label>\r\n                <input type=\"text\" value={this.state.password} onChange={this.handleChangePassword} />\r\n            </div>\r\n            <div>\r\n                <label>address:</label>\r\n                <input type=\"text\" value={this.state.address} onChange={this.handleChangeAddress} />\r\n            </div>\r\n            <button onClick={this.submit}>Update</button>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withRouter(UpdateUser)","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AddUser from './AddUser'\r\nimport UpdateUser from './UpdateUser'\r\n\r\nexport default class LoadUser extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            responseDTO:{\r\n                data: []\r\n            },\r\n            searchDTO: { length: 10, start: 0, order: [{ column: 0, dir: \"desc\" }], columns: [{ data: \"id\" }] }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.loadUser();\r\n    }\r\n\r\n\r\n    loadUser = async () => {\r\n        try {\r\n            let token = btoa(\"0123456789:123456\")\r\n            let response = await fetch(\"http://103.237.144.156:8080/api/admin/accounts\", {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Authorization\" : \"Basic \" + token,\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body: JSON.stringify({})\r\n            })\r\n            console.log(response);\r\n            if(response.ok){\r\n                let resp = await response.json();\r\n                console.log(resp);\r\n                \r\n                // let oldresponseDTO = responseDTO;\r\n                // oldresponseDTO.data = oldresponseDTO.data.concat(responseDTO.data);\r\n                this.setState({\r\n                    responseDTO : resp\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    loadMore = () => {\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.start = searchDTO.start + searchDTO.length;\r\n        this.setState({searchDTO: searchDTO});\r\n\r\n        this.loadUser();\r\n    }\r\n\r\n    reset = () => {\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.start = 0;\r\n        this.setState({searchDTO:searchDTO});\r\n        this.loadUser();\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n               \r\n                <Link to=\"/admin/addUser\">Add</Link>\r\n                <table className=\"menu-loadUser\" >\r\n                    <th>id</th>\r\n                    <th>name</th>\r\n                    <th>password</th>\r\n                    <th>phone</th>\r\n                    <th>address</th>\r\n                    <th>roles</th>\r\n                    <th>options</th>               \r\n                </table>\r\n                <ul>\r\n                {this.state.responseDTO.data.map(user => {\r\n                        return (\r\n                            <div className=\"loadItem\">\r\n                                <LoadItem user={user}  /> \r\n                            </div>\r\n                        ) \r\n                })}\r\n                </ul>\r\n               <input type=\"button\" value=\"Load More\" onClick={this.loadMore}/>\r\n           \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\nclass LoadItem extends React.Component{\r\n    \r\n    deleteUser = async (id) => {\r\n        let token = btoa(\"0123456789:123456\");\r\n        let DELETE_URL = \"http://103.237.144.156:8080/api/admin/user/delete/\" + String(id);\r\n        try {\r\n            let response = await fetch(DELETE_URL, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Authorization\" : \"Basic \"+ token\r\n                }\r\n            })\r\n            console.log(response)\r\n            if(response.ok){\r\n               \r\n                alert(\"Delete Succes\");   \r\n                   \r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <li>\r\n                <ul className=\"sub-menu-loadUser\">\r\n                    <li>{this.props.user.id}</li>\r\n                    <li>{this.props.user.name}</li>\r\n                    <li>{this.props.user.password}</li>\r\n                    <li>{this.props.user.phone}</li>\r\n                    <li>{this.props.user.address}</li>\r\n                    <li>{this.props.user.roles}</li>\r\n                    <input type=\"button\" onClick={() => this.deleteUser(this.props.user.id)} value=\"Delete\"/>\r\n                    <Link to={\"/admin/updateUser/\" + this.props.user.id}>Update</Link>\r\n                </ul>\r\n            </li>    \r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\nclass AddCategory extends React.Component{\r\n     state = {\r\n         name: ''\r\n     }\r\n    addCategory = async () => {\r\n        let token = btoa(\"0123456789:123456\");\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const ADD_CATEGORY_URL = BASE_URL + \"/admin/category/add\";\r\n        try {\r\n            let response = await fetch(ADD_CATEGORY_URL, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\" : \"Basic \" + token,\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body : JSON.stringify(this.state)\r\n            })\r\n            console.log(response);\r\n            if(response.ok){\r\n                let resp = await response.json();\r\n                this.setState(resp)\r\n                alert(\"Add Category success\")\r\n                const {history} = this.props;\r\n                history.goBack();\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n     render(){\r\n         return(\r\n            <React.Fragment>\r\n                <div>\r\n                    <label htmlFor=\"\">Name</label>\r\n                    <input type=\"text\" name=\"name\" onChange={ e => {\r\n                        this.setState({\r\n                            name : e.target.value\r\n                        })\r\n                    }} id=\"\"/>\r\n                    <button onClick={this.addCategory}>Add</button>\r\n                </div>\r\n            </React.Fragment>\r\n         )\r\n     }\r\n}\r\nexport default withRouter(AddCategory)","import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\nclass UpdateCategory extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name : ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getIdCategory()\r\n    }\r\n    handleChang = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n    getIdCategory = async () => {\r\n        const {match} = this.props;\r\n        const id = match.params.id;\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const SEARCH_CATEGORY_URL = BASE_URL + \"/category/\" + id;\r\n        try {\r\n            let resp = await fetch(SEARCH_CATEGORY_URL, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n            })\r\n            if(resp.ok){\r\n                let category = await resp.json();\r\n                this.setState(category)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    sumbit = async () => {\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const UPDATE_CATEGORY_URL = BASE_URL + \"/admin/category/update\"\r\n        try {\r\n            let token = localStorage.getItem(\"token\")\r\n            let resp = await fetch(UPDATE_CATEGORY_URL,\r\n                {\r\n                    method : \"PUT\",\r\n                    headers : {\r\n                        \"Authorization\" : \"Basic \" + token,\r\n                        \"Content-Type\" : \"application/json\"\r\n                    },\r\n                    body : JSON.stringify(this.state)\r\n                })\r\n            if(resp.ok) {\r\n                this.setState({success : \"Success\"})\r\n                const {history} = this.props;\r\n                history.goBack()\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n        <div>\r\n            <p>{this.state.success}</p>\r\n            <div>\r\n                <label htmlFor=\"\">Name</label>\r\n                <input type=\"text\" value={this.state.name} onChange={this.handleChange} />\r\n            </div>\r\n            <button onClick={this.sumbit}>Update</button>\r\n        </div>\r\n        )}\r\n}\r\nexport default withRouter(UpdateCategory)","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport AddCategory from './AddCategory'\r\nimport UpdateCategory from './UpdateCategory'\r\nclass LoadCategory extends React.Component{\r\n    state = {\r\n        responseDTO: {\r\n            data: []\r\n        },\r\n        searchDTO: { length: 10, start: 0, order: [{ column: 0, dir: \"desc\" }], columns: [{ data: \"id\" }] }\r\n    }\r\n    componentDidMount(){\r\n        this.loadCategory();\r\n    }   \r\n    loadMore = () => {\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.start = searchDTO.start + searchDTO.length;\r\n        this.setState({ searchDTO })\r\n        this.loadCategory();\r\n    }\r\n     \r\n    loadCategory = async () => {\r\n        let token = btoa(\"0123456789:123456\");\r\n        let loadCategory_URL = \"http://103.237.144.156:8080/api/category/search\";\r\n        try {\r\n            let response = await fetch(loadCategory_URL, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\" : \"application/json\",\r\n                    \"Authorization\" : \"Basic \" + token\r\n                },\r\n                body: JSON.stringify({})\r\n            })\r\n            if(response.ok){\r\n                console.log(response);\r\n                let resp = await response.json();\r\n                let oldResponseDTO =this.state.responseDTO;\r\n                oldResponseDTO.data =oldResponseDTO.data.concat(resp.data)\r\n                this.setState({\r\n                    responseDTO:oldResponseDTO\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    reset = () => {\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.start = 0;//reset ve 0\r\n        this.setState({ searchDTO })\r\n\r\n        this.setState({\r\n            responseDTO: {\r\n                data: []\r\n            }\r\n        })\r\n\r\n        this.loadCategory()\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Link to=\"/admin/category/add\">Add</Link>\r\n             <ul style={{display: 'flex',width: 500,justifyContent:'space-around',border: '1px solid #333'}}>\r\n               <li>Id</li>\r\n               <li>Name</li>\r\n           </ul>\r\n           {this.state.responseDTO.data.map(user => {\r\n            return (\r\n                    <LoadItem reset={this.reset} user={user}  />                \r\n            ) \r\n             })}\r\n             <input type=\"button\" onClick={this.loadMore} value=\"Load More\"/>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nclass LoadItem extends React.Component{\r\n    deleteCategory = async (id) => {\r\n        let token = btoa(\"0123456789:123456\");\r\n        let DELETE_CATEGORY_URL = \"http://103.237.144.156:8080/api/admin/category/delete?id=\" + String(id);\r\n        try {\r\n            let response = await fetch(DELETE_CATEGORY_URL, {\r\n                method : \"DELETE\",\r\n                headers : {\r\n                    \"Authorization\" : \"Basic \" + token, \r\n                }\r\n            })\r\n            if(response.ok){\r\n                this.props.reset()\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div style={{display:'flex',width:900,justifyContent:'space-around'}}>\r\n                <li>{this.props.user.id}</li>\r\n                <li>{this.props.user.name}</li>\r\n                <input type=\"button\" onClick={ () => {\r\n                    this.deleteCategory(this.props.user.id)\r\n                } } value=\"Delete\"/>\r\n                <Link to={\"/admin/category/updateCategory/\" + this.props.user.id}>Update</Link>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(LoadCategory)","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class LoadPost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            responseDTO: {\r\n                data: [],\r\n            },\r\n            searchDTO: { length: 10, start: 0, order: [{ column: 0, dir: \"desc\" }], columns: [{ data: \"id\" }] }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPost();\r\n    }\r\n\r\n    reset = () => {\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.start = 0;\r\n        this.setState({ searchDTO })\r\n        this.setState({\r\n            responseDTO: {\r\n                data: []\r\n            }\r\n        })\r\n        this.loadPost()\r\n    }\r\n\r\n    loadMore = () => {\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.start = searchDTO.start + searchDTO.length;\r\n        this.setState({ searchDTO })\r\n        this.loadPost()\r\n    }\r\n\r\n    loadPost = async () => {\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const SEARCH_POST_URL = BASE_URL + '/post/search'\r\n\r\n        try {\r\n            let resp = await fetch(SEARCH_POST_URL, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: '*/*',\r\n                    'content-type': \"application/json;charset=utf-8\"\r\n                },\r\n                body: JSON.stringify({})\r\n            })\r\n            if (resp.ok) {\r\n                let responseDTO = await resp.json()\r\n\r\n                let oldResponseDTO = this.state.responseDTO;\r\n                oldResponseDTO.data = oldResponseDTO.data.concat(responseDTO.data)\r\n\r\n                this.setState({ responseDTO: oldResponseDTO })\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n         <Link to={'/admin/post/add'}>Them</Link>\r\n            <table border=\"1\">\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Title</th>\r\n                    <th>Description</th>\r\n                    <th>CategoryID</th>\r\n                    <th>Image</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                { this.state.responseDTO.data.map(post => {\r\n                    return <RowItem post={ post } reset={ this.reset } />\r\n                }) }\r\n            </table>\r\n            <button onClick={ this.loadMore }>Load more</button>\r\n        </div>\r\n    }\r\n}\r\nclass RowItem extends React.Component {\r\n    deleteData = async (id) => {\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\"\r\n        const DELETE_POST_URL = BASE_URL + \"/admin/post/delete/\"\r\n        try {\r\n            let token = localStorage.getItem(\"token\")\r\n            let resp = await fetch(DELETE_POST_URL + id, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Accept: '*/*',\r\n                    'content-type': \"application/json;charset=utf-8\",\r\n                    'Authorization': 'Basic ' + token\r\n                },\r\n            })\r\n            if (resp.ok) {\r\n                this.props.reset()\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{ this.props.post.id }</td>\r\n                <td>{ this.props.post.title }</td>\r\n                <td>{ this.props.post.decription }</td>\r\n                <td>{ this.props.post.categoryId }</td>\r\n                <td ><img style={{width: '100px', height: '100px'}}  src={ `http://103.237.144.156:8080/image/${this.props.post.images}` } ></img>\r\n                <Link to={'/admin/comment/add/' +this.props.post.id }>AddComment</Link>\r\n                </td>\r\n                <td><button onClick={ () => this.deleteData(this.props.post.id) }>Delete</button>\r\n                    <Link to={ '/admin/post/update/' + this.props.post.id }>Update      </Link>\r\n                    <Link to={'/admin/comment/' + this.props.post.id}>ListComment</Link>\r\n\r\n                </td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nexport default class AddPost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            categoryId: 0,\r\n            selectedFile: null,\r\n            categories: []\r\n        }\r\n    }\r\n    //\r\n    componentDidMount() {\r\n        this.loadCategory()\r\n    }\r\n    //\r\n    loadCategory = async () => {\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const SEARCH_CATEGORY_URL = BASE_URL + \"/category/search\"\r\n        let searchDTO = { length: 100, start: 0 }\r\n        try {\r\n            let resp = await fetch(SEARCH_CATEGORY_URL,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(searchDTO)\r\n                }\r\n            )\r\n\r\n            if (resp.ok) {\r\n                let responseDTO = await resp.json()\r\n                this.setState({ categories: responseDTO.data })\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    //\r\n    submitData = async () => {\r\n        console.log(this.state)\r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const ADD_CATEGORY_URL = BASE_URL + \"/member/post/add\"\r\n\r\n        var data = new FormData()\r\n\r\n        data.append(\"title\", this.state.title)\r\n        data.append(\"categoryId\", this.state.categoryId)\r\n        data.append(\"imageFile\", this.state.selectedFile, this.state.selectedFile.name)\r\n        try {\r\n            let token = localStorage.getItem(\"token\")\r\n            let resp = await fetch(ADD_CATEGORY_URL,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Authorization\": \"Basic \" + token,\r\n                    },\r\n                    body: data\r\n                }\r\n            )\r\n            console.log(resp)\r\n            if (resp.ok) {\r\n                let responseDTO = await resp.json()\r\n                console.log(responseDTO)\r\n                this.setState({ success: \"SUCCESS\" })\r\n                this.props.reload()\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    //\r\n    handleChangeFile = (evt) => {\r\n        this.setState({\r\n            selectedFile: evt.target.files[0]\r\n        })\r\n    }\r\n    //\r\n    handleChangeTitle = (evt) => {\r\n        this.setState({\r\n            title: evt.target.value\r\n        })\r\n    }\r\n    //\r\n    handleChangeDescription = (evt) => {\r\n        this.setState({\r\n            description: evt.target.value\r\n        })\r\n    }\r\n    //\r\n    handleChangeCategoryId = (evt) => {\r\n        this.setState({\r\n            categoryId: evt.target.value\r\n        })\r\n    }\r\n    // handleChangeImageFile = (evt) => {\r\n\r\n    // }\r\n    render() {\r\n\r\n        return <div>\r\n            <p>{this.state.success}</p>\r\n            <div>\r\n                <form id=\"form-post\">\r\n                    <label>title</label>\r\n                    <input type=\"text\" name=\"title\" onChange={\r\n                        this.handleChangeTitle\r\n                    }></input>\r\n                    <label>description</label>\r\n                    <input type=\"text\" name=\"description\" onChange={\r\n                        this.handleChangeDescription\r\n                    }></input>\r\n                        <label>Category:</label>\r\n                <select onChange={(event) => this.setState({ categoryId: event.target.value })}>\r\n                    {\r\n                        this.state.categories.map(item =>\r\n                            <option key={item.id} value={item.id}>{item.name}</option>\r\n                        )\r\n                    }\r\n                </select>\r\n                <label>File:</label>\r\n                <input type=\"file\" onChange={this.handleChangeFile} accept=\"image/*\" />\r\n                    <input type=\"button\" value=\"them\" onClick={this.submitData} ></input>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n class AddComment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            content: '',\r\n            postId: 0,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n         ///doc id\r\n         const { match } = this.props;\r\n         const postId = match.params.id\r\n         this.setState({postId: postId})\r\n    }\r\n\r\n    \r\n\r\n\r\n    handleChangeContent = (evt) => {\r\n        this.setState({\r\n            content: evt.target.value\r\n        })\r\n    }\r\n    \r\n    addComment = async () => {\r\n        try {\r\n            let token = localStorage.getItem(\"token\")\r\n           \r\n            let response = await fetch('http://103.237.144.156:8080/api/member/comment/add', {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"*/*\",\r\n                    \"Content-Type\": \"application/json;charset=utf-8\",\r\n                    \"Authorization\": \"Basic \" + token\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            })\r\n            if (response.ok) {\r\n                let responseDTO = await response.json();\r\n                console.log(responseDTO);\r\n                this.setState({ success: \"SUCCESS\" })\r\n                alert(\"them bai viet thanh cong\")\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    render() {\r\n        //trong onclick phai truyen vao ham\r\n        return (<div>\r\n            <div>\r\n                <label>Content:</label>\r\n                <input type=\"text\" onChange={this.handleChangeContent} />\r\n            </div>\r\n            \r\n            <div>\r\n                <button onClick={this.addComment}>ADD</button>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(AddComment)","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class LoadComment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            responseDTO: {\r\n                data: []\r\n            },          \r\n            searchDTO: { length: 10, start: 0, order: [{ column: 0, dir: \"desc\" }], columns: [{ data: \"id\" }] ,postId:0}\r\n        }\r\n    }\r\n \r\n    componentDidMount() {\r\n        const { match } = this.props;\r\n        const postId = match.params.id\r\n        console.log('1')\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.postId = postId;\r\n        this.setState({ searchDTO })\r\n        this.setState({ postId: postId })\r\n        this.loadData2()\r\n    }\r\n    reset = () => {\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.start = 0;//reset ve 0\r\n        this.setState({ searchDTO })\r\n\r\n        this.setState({\r\n            responseDTO: {\r\n                data: []\r\n            }\r\n        })\r\n\r\n        this.loadData2()\r\n    }\r\n\r\n    loadMore = () => {\r\n        let searchDTO = this.state.searchDTO;\r\n        searchDTO.start = searchDTO.start + searchDTO.length;\r\n        this.setState({ searchDTO })\r\n\r\n        this.loadData2()\r\n    }\r\n    loadData2 = async () => {\r\n        const ADD_USER_URL =\"http://103.237.144.156:8080/api/comment/search\" \r\n        console.log('2')\r\n        try {\r\n            let response = await fetch(ADD_USER_URL, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: '*/*',\r\n                    'content-type': \"application/json;charset=utf-8\"\r\n                },\r\n                body: JSON.stringify(this.state.searchDTO)\r\n              \r\n            })\r\n            if (response.ok) {\r\n                let resp = await response.json();\r\n                console.log(resp)\r\n                let oldResponseDTO = this.state.responseDTO;\r\n                oldResponseDTO.data = oldResponseDTO.data.concat(resp.data)\r\n\r\n                this.setState({ responseDTO: oldResponseDTO })\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table style={{ border: '1px solid red' }}>\r\n                    <tr >\r\n                        <th style={{ border: '1px solid red' }}>name</th>\r\n                        <th style={{ border: '1px solid red' }}>date</th>\r\n\r\n                    </tr>\r\n                    {this.state.responseDTO.data.map(com => {\r\n                        return <tr>\r\n                            <td style={{ border: '1px solid red' }}>{com.content}</td>\r\n                            <td style={{ border: '1px solid red' }}>{com.createdDate}</td>\r\n\r\n                        </tr>\r\n                     \r\n                    })}\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport {  Link, Route, Switch } from 'react-router-dom';\r\nimport LoadUser from \"../component/User/LoadUser\"\r\nimport AddCategory from \"../component/Category/AddCategory\"\r\nimport UpdateCategory from \"../component/Category/UpdateCategory\"\r\nimport LoadCategory from \"../component/Category/LoadCategory\"\r\n\r\nimport AddUser from '../component/User/AddUser';\r\nimport UpdateUser from \"../component/User/UpdateUser\"\r\nimport LoadPost from '../component/Post/LoadPost';\r\nimport AddPost from '../component/Post/AddPost';\r\nimport AddComment from '../component/Comment/AddComment';\r\nimport LoadComment from '../component/Comment/LoadComment';\r\n\r\n\r\nclass Admin extends React.Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>Welcome</h1>\r\n        <AdminMenu /> \r\n        <AdminRoute />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction AdminMenu(){\r\n  return(\r\n            <ul>\r\n                <li><Link to=\"/admin/user\">User</Link></li>\r\n                <li><Link to=\"/admin/category\">Category</Link></li>\r\n                <li><Link to=\"/admin/post\">Post</Link></li>\r\n                <li><Link to=\"/admin/comment\">Comment</Link></li>\r\n            </ul>\r\n  )\r\n}\r\nfunction AdminRoute(){\r\n          return(\r\n        <Switch>\r\n          <Route path=\"/admin/user\">\r\n               <LoadUser />\r\n          </Route>\r\n          <Route path=\"/admin/category\" exact>\r\n                <LoadCategory />\r\n          </Route>\r\n          <Route path=\"/admin/category/add\">\r\n                <AddCategory />\r\n          </Route>\r\n        \r\n          \r\n          <Route path=\"/admin/addUser\">\r\n            <AddUser />\r\n          </Route>\r\n          <Route path=\"/admin/updateUser/:id\">\r\n            <UpdateUser />\r\n          </Route>\r\n          <Route path=\"/admin/category/updateCategory/:id\">\r\n            <UpdateCategory />\r\n          </Route>\r\n       \r\n       \r\n          <Route path=\"/admin/post/add\" exact>\r\n            \r\n            <AddPost />\r\n            \r\n        </Route>\r\n        <Route path=\"/admin/post\" exact>\r\n          <LoadPost />\r\n        </Route>\r\n        <Route path=\"/admin/comment/add/:id\"  >\r\n            \r\n            <AddComment />\r\n            \r\n        </Route>\r\n        <Route path=\"/admin/comment/:id\" component={LoadComment}exact>\r\n        </Route>\r\n      \r\n        </Switch>\r\n)\r\n}\r\nexport default Admin;\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password:'',\r\n            error: false\r\n        }\r\n    }\r\n    login = async () => {\r\n     \r\n        const BASE_URL = \"http://103.237.144.156:8080/api\";\r\n        const MEMBER_URL = BASE_URL + \"/member/me\"\r\n      \r\n        try {\r\n            let token = btoa(this.state.username + \":\" + this.state.password)\r\n            let resp = await fetch(MEMBER_URL, \r\n                {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Authorization\": \"Basic \" + token,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            })\r\n         \r\n        \r\n            if(resp.ok){\r\n                let userDTO = await resp.json();\r\n                console.log(userDTO)\r\n                localStorage.setItem(\"token\",token);\r\n                localStorage.setItem(\"user\",JSON.stringify(userDTO))\r\n                const {history} = this.props;\r\n                history.replace(\"/admin\")\r\n            }else {\r\n                                this.setState({\r\n                                    error: true\r\n                                })\r\n                            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label htmlFor=\"\">Username</label>\r\n                    <input type=\"text\"  onChange={ e => {\r\n                       this.setState({\r\n                           username: e.target.value\r\n                       })\r\n                    }} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"\">Password</label>\r\n                    <input type=\"password\"  onChange={ e => {\r\n                       this.setState({\r\n                           password: e.target.value\r\n                       })\r\n                    }} />\r\n                </div>\r\n                {this.state.error && <div>Tai khoan va mat khau sai</div>}\r\n                <div>\r\n                   <button onClick={this.login}>Login</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Login)\r\n\r\n","import './App.css';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport Redux from './component/Redux/Redux'\nimport Admin from './admin/Admin';\nimport Login from './Login';\n\nexport default function App() {\n  return (//JSX\n    <Router>\n      <Switch>\n        <Route path=\"/admin\">\n          <Admin />\n        </Route>\n        <Route path=\"/\">\n          <Client />\n        </Route>\n        <Route path=\"/redux\">\n          <Redux />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction Client() {\n  return <div>\n    <h1>Welcome to System!</h1>\n    <MenuClient />\n    <ClientRoute />\n  </div>\n}\nfunction MenuClient() {\n  return <ul>\n    <li><Link to=\"/\">Home</Link></li>\n    <li><Link to=\"/login\">Login</Link></li>\n    <li><Link to=\"/redux\">Redux</Link></li>\n  </ul>\n}\nfunction ClientRoute() {\n  return <Switch>\n    <Route path=\"/login\">\n      <Login />\n    </Route>\n  </Switch>\n}\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}